(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"013z":function(e,t,n){"use strict";n("KKXr"),n("pIFo");var a=n("pOBw"),r=n("q1tI"),o=n.n(r),l=n("NmYn"),c=n.n(l),i=n("OKom"),b=n("k4MR"),s=n("TSYQ"),p=n.n(s),d=n("QH2O"),u=n("qKvR"),m=function(e){var t,n=e.title,a=e.tabs,r=void 0===a?[]:a;return Object(u.b)("div",{className:p()(d.pageHeader,(t={},t[d.withTabs]=r.length,t))},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12"},Object(u.b)("h1",{id:"page-title",className:d.text},n)))))},h=n("pEPl"),j=n("BAC9"),O=function(e){var t=e.relativePagePath,n=e.repository,a=h.data.site.siteMetadata.repository,r=n||a,o=r.baseUrl,l=r.subDirectory,c=o+"/edit/"+r.branch+l+"/src/pages"+t;return o?Object(u.b)("div",{className:"bx--row "+j.row},Object(u.b)("div",{className:"bx--col"},Object(u.b)("a",{className:j.link,href:c},"Edit this page on GitHub"))):null},N=n("FCXl"),g=(n("Oyvg"),n("Wbzz")),v=n("I8xM");var f=function(e){var t,n;function a(){return e.apply(this,arguments)||this}return n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,a.prototype.render=function(){var e=this.props,t=e.tabs,n=e.slug,a=n.split("/").filter(Boolean).slice(-1)[0],r=t.map((function(e){var t,r=c()(e,{lower:!0}),o=r===a,l=new RegExp(a+"(?!-)"),i=n.replace(l,r);return Object(u.b)("li",{key:e,className:p()((t={},t[v.selectedItem]=o,t),v.listItem)},Object(u.b)(g.Link,{className:v.link,to:""+i},e))}));return Object(u.b)("div",{className:v.tabsContainer},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(u.b)("nav",null,Object(u.b)("ul",{className:v.list},r))))))},a}(o.a.Component),C=n("MjG9");t.a=function(e){var t=e.pageContext,n=e.children,r=e.location,o=e.Title,l=t.frontmatter,s=void 0===l?{}:l,p=t.relativePagePath,d=t.titleType,h=s.tabs,j=s.title,g=s.theme,v=s.description,y=s.keywords,w=a.data.site.pathPrefix,D=w?r.pathname.replace(w,""):r.pathname,I=h?D.split("/").filter(Boolean).slice(-1)[0]||c()(h[0],{lower:!0}):"";return Object(u.b)(b.a,{tabs:h,homepage:!1,theme:g,pageTitle:j,pageDescription:v,pageKeywords:y,titleType:d},Object(u.b)(m,{title:o?Object(u.b)(o,null):j,label:"label",tabs:h}),h&&Object(u.b)(f,{slug:D,tabs:h,currentTab:I}),Object(u.b)(C.a,{padded:!0},n,Object(u.b)(O,{relativePagePath:p})),Object(u.b)(N.a,{pageContext:t,location:r,slug:D,tabs:h,currentTab:I}),Object(u.b)(i.a,null))}},Sua3:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return b}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var a=n("7ljp"),r=n("013z");n("qKvR");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var l={},c={_frontmatter:l},i=r.a;function b(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(i,o({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"})),Object(a.b)("h1",null,"make sure there is a space after the - so that the TOC is generated"),Object(a.b)("p",null,"{:toc}"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"(19.0.3 UPDATE NEEDED)")),Object(a.b)("h3",null,"Required services"),Object(a.b)("p",null,"Before installing IBM Business Automation Navigator (ICN), you should have the following pre-requisites in place:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Have privileged access to your DB2 database server. "),Object(a.b)("li",{parentName:"ul"},"Optionally, have access to your LDAP directory server.")),Object(a.b)("p",null,"See the ",Object(a.b)("a",o({parentName:"p"},{href:"/content/automation/shared-services"}),"Shared services")," chapter for details on DB2 or LDAP installation, if needed."),Object(a.b)("h3",null,"Log in to you OCP cluster"),Object(a.b)("p",null,"See the ",Object(a.b)("a",o({parentName:"p"},{href:"/content/automation/pre-requisites"}),"Prerequisites")," chapter for details on logging in to your OCP cluster."),Object(a.b)("h3",null,"Download the ICN PPA"),Object(a.b)("p",null,"Download the following PPA from ",Object(a.b)("a",o({parentName:"p"},{href:"https://www.ibm.com/software/passportadvantage"}),"IBM Passport Advantage")," to your working-directory:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("em",{parentName:"li"},"IBM Cloud Pak for Automation v19.0.1 - Content Navigator for Certified Kubernetes Multiplatform Multilingual (CC221ML)"))),Object(a.b)("p",null,"The downloaded archive should be named ",Object(a.b)("inlineCode",{parentName:"p"},"ICP4A19.0.1-fncn.tgz"),"."),Object(a.b)("h3",null,"Create the ICN project"),Object(a.b)("p",null,"Create a new OpenShift project for ICN with your desired name, e.g. ",Object(a.b)("inlineCode",{parentName:"p"},"fncnproject"),":"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc new-project fncnproject\n")),Object(a.b)("p",null,"Make sure you are working from  your newly created ICN project, then grant the tiller server ",Object(a.b)("inlineCode",{parentName:"p"},"edit")," access to current project:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),'oc project fncnproject\noc adm policy add-role-to-user edit "system:serviceaccount:tiller:tiller"\n')),Object(a.b)("h3",null,"Update the SCC"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc adm policy add-scc-to-user privileged -z default\n\noc edit namespace fncnproject\n")),Object(a.b)("p",null,"While in the editor change these lines:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"openshift.io/sa.scc.supplemental-groups: 1000330000/10000"),Object(a.b)("li",{parentName:"ul"},"openshift.io/sa.scc.uid-range: 1000330000/10000  ")),Object(a.b)("p",null,"To look like this:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"openshift.io/sa.scc.supplemental-groups: 50000"),Object(a.b)("li",{parentName:"ul"},"openshift.io/sa.scc.uid-range: 50001")),Object(a.b)("p",null,"You may get the following error if the SCC is not applied properly:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"forbidden: unable to validate against any security context constraint: [fsGroup: Invalid value: []int64{50000}: 50000 is not an allowed group\n")),Object(a.b)("h3",null,"Push the FNCN images to the registry"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Get the route to the docker service as described in the ",Object(a.b)("a",o({parentName:"li"},{href:"/content/automation/pre-requisites"}),"Pre-requisites")," chapter, then login to your Docker registry:")),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"docker login -u $(oc whoami) -p $(oc whoami -t) <route-to-docker-service>\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Download the ",Object(a.b)("inlineCode",{parentName:"li"},"loadimages.sh")," script from the ",Object(a.b)("inlineCode",{parentName:"li"},"icp4a")," GitHub repo to your working directory:")),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"wget https://raw.githubusercontent.com/icp4a/cert-kubernetes/19.0.1/scripts/loadimages.sh\nchmod +x loadimages.sh\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Load the ICN images (use ",Object(a.b)("inlineCode",{parentName:"li"},"sudo")," for on-prem cluster):")),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"./loadimages.sh -p ICP4A19.0.1-fncn.tgz -r <route-to-docker-service>\n")),Object(a.b)("h3",null,"Create the database"),Object(a.b)("p",null,"Download ",Object(a.b)("a",o({parentName:"p"},{href:"/assets/automation/icn/db2/createICNDB.sh"}),Object(a.b)("inlineCode",{parentName:"a"},"createICNDB.sh")),", ",Object(a.b)("a",o({parentName:"p"},{href:"/assets/automation/icn/db2/DB2_CREATE_SCRIPT.sql"}),Object(a.b)("inlineCode",{parentName:"a"},"DB2_CREATE_SCRIPT.sql"))," and ",Object(a.b)("a",o({parentName:"p"},{href:"/assets/automation/icn/db2/DB2_ONE_SCRIPT_ICNDB.sql"}),Object(a.b)("inlineCode",{parentName:"a"},"DB2_ONE_SCRIPT_ICNDB.sql"))," to your working directory on the database server and run the following commands:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"## copy the db2 install script\nmkdir -p /data/db2fs\nmkdir -p /data/database/config\n\n## copy createICNDB.sh, DB2_CREATE_SCRIPT.sql and DB2_ONE_SCRIPT_ICNDB.sql files into folder /data/database/config\ncp createICNDB.sh DB2_CREATE_SCRIPT.sql DB2_ONE_SCRIPT_ICNDB.sql /data/database/config\n\nchown db2inst1:db2iadm1 /data/database/config\nchown db2inst1:db2iadm1 /data/database/config/*.sh\nchown db2inst1:db2iadm1 /data/database/config/*.sql\nchmod 755 /data/database/config/*.sh\n\nsu - db2inst1\ncd /data/database/config\n./createICNDB.sh -n ICNDB -s ICNSCHEMA -t ICNTS -u db2inst1 -a ceadmin\n\n## exit su mode\nexit\n")),Object(a.b)("h3",null,"Set up the persistent volumes"),Object(a.b)("p",null,"Run the following commands to create the required PV folders in NFS, where ",Object(a.b)("inlineCode",{parentName:"p"},"/data/persistentvolumes/")," is the mounted directory of your NFS server:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"mkdir -p /data/persistentvolumes/icn/configDropins/overrides\nmkdir -p /data/persistentvolumes/icn/logs\nmkdir -p /data/persistentvolumes/icn/plugins\nmkdir -p /data/persistentvolumes/icn/viewerlog\nmkdir -p /data/persistentvolumes/icn/viewercache\nmkdir -p /data/persistentvolumes/icn/aspera\n\nchown 50001:50000 /data/persistentvolumes/icn/configDropins/overrides\nchown 50001:50000 /data/persistentvolumes/icn/logs\nchown 50001:50000 /data/persistentvolumes/icn/plugins\nchown 50001:50000 /data/persistentvolumes/icn/viewerlog\nchown 50001:50000 /data/persistentvolumes/icn/viewercache\nchown 50001:50000 /data/persistentvolumes/icn/aspera\n")),Object(a.b)("p",null,"Obtain the DB2 drivers from your database server installation. Copy them to the PVs. If your database server is local the commands should look like this: "),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"cp /opt/ibm/db2/V11.1/java/db2jcc4.jar /data/persistentvolumes/icn/configDropins/overrides/\ncp /opt/ibm/db2/V11.1/java/db2jcc_license_cu.jar /data/persistentvolumes/icn/configDropins/overrides/\n")),Object(a.b)("p",null,"Download all the ICN overrides files to your working directory "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"/assets/automation/icn/configDropins/overrides/ICNDS.xml"}),Object(a.b)("inlineCode",{parentName:"a"},"ICNDS.xml"))," "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"/assets/automation/icn/configDropins/overrides/DB2JCCDriver.xml"}),Object(a.b)("inlineCode",{parentName:"a"},"DB2JCCDriver.xml"))," "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"/assets/automation/icn/configDropins/overrides/ldap_TDS.xml"}),Object(a.b)("inlineCode",{parentName:"a"},"ldap_TDS.xml")),"  ")),Object(a.b)("p",null,"If you changed the database name in the database creation step above, you will also need to change it in ",Object(a.b)("inlineCode",{parentName:"p"},"ICNDS.xml")," here  "),Object(a.b)("p",null,"Edit ",Object(a.b)("inlineCode",{parentName:"p"},"ICNDS.xml"),", replacing ",Object(a.b)("inlineCode",{parentName:"p"},"<db-server-ip>")," with the IP address of the database server, and possibly the database name.",Object(a.b)("br",{parentName:"p"}),"\n",Object(a.b)("inlineCode",{parentName:"p"},"DB2JCCDriver.xml")," contains the locations of the ",Object(a.b)("inlineCode",{parentName:"p"},"db2jcc4.jar")," and ",Object(a.b)("inlineCode",{parentName:"p"},"db2jcc_license_cu.jar")," files.",Object(a.b)("br",{parentName:"p"}),"\n","Edit ",Object(a.b)("inlineCode",{parentName:"p"},"ldap_TDS.xml"),", replacing ",Object(a.b)("inlineCode",{parentName:"p"},"<ldap-server-ip>")," with the IP address of the LDAP server.  "),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"cp DB2JCCDriver.xml /data/persistentvolumes/icn/configDropins/overrides/\ncp ICNDS.xml /data/persistentvolumes/icn/configDropins/overrides/\ncp ldap_TDS.xml /data/persistentvolumes/icn/configDropins/overrides/\n")),Object(a.b)("p",null,"Download the ",Object(a.b)("a",o({parentName:"p"},{href:"/assets/automation/icn/pv.yaml"}),Object(a.b)("inlineCode",{parentName:"a"},"pv.yaml"))," configuration file to your working directory."),Object(a.b)("p",null,"Replace the placeholder ",Object(a.b)("inlineCode",{parentName:"p"},"<ip-address>")," placeholder with the IP address of NFS server and adjust the persistent volume path if needed."),Object(a.b)("p",null,"Run the following command to create the PVs:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc apply -f pv.yaml\n")),Object(a.b)("h3",null,"Create secrets"),Object(a.b)("p",null,"The Helm chart requires a secret in order to pull images from docker. You might need to change the address of the docker server."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc create secret docker-registry admin.registrykey --docker-server=docker-registry.default.svc:5000 --docker-username=$(oc whoami) --docker-password=$(oc whoami -t) -n fncnproject\n")),Object(a.b)("p",null,"Note that you cannot add the same secret more than once. If you need to delete a secret in order to create a new one, use the following command:  "),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc delete secret admin.registrykey -n fncnproject\n")),Object(a.b)("h3",null,"Install the ICN components"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Download the ",Object(a.b)("a",o({parentName:"p"},{href:"/assets/automation/icn/values.yaml"}),Object(a.b)("inlineCode",{parentName:"a"},"values.yaml"))," file to your working directory.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Download the Helm charts to your working directory:"))),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"wget https://github.com/icp4a/cert-kubernetes/raw/master/NAVIGATOR/helm-charts/ibm-dba-navigator-3.0.0.tgz\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Install the Helm charts:")),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"helm install ibm-dba-navigator-3.0.0.tgz --name navigator-prod-release --namespace fncnproject -f values.yaml\n")),Object(a.b)("h3",null,"Expose the ICN console service"),Object(a.b)("p",null,"Download the ",Object(a.b)("a",o({parentName:"p"},{href:"/assets/automation/icn/route.yaml"}),Object(a.b)("inlineCode",{parentName:"a"},"route.yaml"))," file to your working directory and run the command:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc apply -f route.yaml\n")),Object(a.b)("p",null,"To retrieve the ICN console service URL, open the ",Object(a.b)("inlineCode",{parentName:"p"},"services")," section on the OCP cluster console, select the desired ICN service, and go to the detail page to find the URL."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc get route -n openshift-console\n\n")),Object(a.b)("p",null,"which will return something like this:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"NAME      HOST/PORT                                   PATH      SERVICES   PORT      TERMINATION          WILDCARD\nconsole   console.apps-cp4a-res.rtp.raleigh.ibm.com             console    https     reencrypt/Redirect   None\n")),Object(a.b)("p",null,"Open the Host/Port in a browser. Select the ecmproject. On the left, select Networking, and the routes. This will give you the base URL for ICN. Append ",Object(a.b)("inlineCode",{parentName:"p"},"/navigator")," to that URL. That should take you to the ICN page. The username is ",Object(a.b)("inlineCode",{parentName:"p"},"ceadmin")," and the password is ",Object(a.b)("inlineCode",{parentName:"p"},"Passw0rd"),"."),Object(a.b)("h3",null,"Post-install tasks"),Object(a.b)("p",null,"See the following step to complete the installation:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://www.ibm.com/support/knowledgecenter/en/SSYHZ8_18.0.x/com.ibm.dba.install/k8s_topics/tsk_ecmconfigbank8s.html"}),"Configuring IBM Business Automation Navigator in a container environment"))),Object(a.b)("h3",null,"Initialize your Navigator installation"),Object(a.b)("p",null,"Login to Navigator. Go to ",Object(a.b)("inlineCode",{parentName:"p"},"Administration")," panel from the ",Object(a.b)("inlineCode",{parentName:"p"},"Main Menu"),". Click on ",Object(a.b)("inlineCode",{parentName:"p"},"Connections")," then select the ",Object(a.b)("inlineCode",{parentName:"p"},"Repositories")," tab."),Object(a.b)("p",null,"Create a repository: "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Choose ",Object(a.b)("inlineCode",{parentName:"li"},"FileNet Content Manager repository")," as type. "),Object(a.b)("li",{parentName:"ul"},"The server URL must be your CPE service URL + ",Object(a.b)("inlineCode",{parentName:"li"},"/wsi/FNCEWS40MTOM/"),". This should look like: ",Object(a.b)("inlineCode",{parentName:"li"},"https://cpe-prod-release-ibm-dba-contentservices-https-ecmproject.router.default.svc.cluster.local/wsi/FNCEWS40MTOM/"),"."),Object(a.b)("li",{parentName:"ul"},"In the ",Object(a.b)("inlineCode",{parentName:"li"},"Configuration Parameters")," tab, set the ",Object(a.b)("inlineCode",{parentName:"li"},"Entry template management")," value to ",Object(a.b)("inlineCode",{parentName:"li"},"Enabled"),".")),Object(a.b)("p",null,"Create a ",Object(a.b)("inlineCode",{parentName:"p"},"Desktop"),"."),Object(a.b)("h3",null,"Uninstall"),Object(a.b)("p",null,"If needed, run the following steps to uninstall ICN:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"helm delete navigator-prod-release --purge \noc delete -f route.yaml\noc delete secret admin.registrykey -n fncnproject\n")),Object(a.b)("p",null,"To optionally delete the PVs"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc delete pvc icn-asperastore-pvc\noc delete pvc icn-cfgstore-pvc\noc delete pvc icn-logstore-pvc\noc delete pvc icn-pluginstore-pvc\noc delete pvc icn-vw-cachestore-pvc\noc delete pvc icn-vw-logstore-pvc\n\noc delete -f pv.yaml\n")),Object(a.b)("p",null,"Ask your database administrator to remove the databases associated with ICN."),Object(a.b)("h3",null,"Troubleshooting"),Object(a.b)("p",null,"Check the pods for the ecmproject. This will show the overall health."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc get pods -n fncnproject\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Check for errors in the ",Object(a.b)("inlineCode",{parentName:"li"},"./loadimages.sh")," step earlier.  "),Object(a.b)("li",{parentName:"ul"},"The registry might have run out of room. "),Object(a.b)("li",{parentName:"ul"},"Verify you’re pushing/pulling to/from the right registry in the docker console."),Object(a.b)("li",{parentName:"ul"},"Verify Secret is not preventing you from pulling images. "),Object(a.b)("li",{parentName:"ul"},"Infrastructure might have evicted the registry pod.")),Object(a.b)("p",null,"Verify both images were uploaded and are available to your project workspace."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc get imagestreams -n fncnproject\n")),Object(a.b)("p",null,"Run oc describe pod to gain insight into what’s going on"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc describe pod <pod name> -n fncnproject\n\n")),Object(a.b)("p",null,"Run oc logs to view the pod’s log files"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"oc logs <pod name> -n fncnproject\n\n")))}b.isMDXComponent=!0},pEPl:function(e){e.exports=JSON.parse('{"data":{"site":{"siteMetadata":{"repository":{"baseUrl":"https://ocp43.cloudpak8s.io","subDirectory":"/","branch":"master"}}}}}')},pOBw:function(e){e.exports=JSON.parse('{"data":{"site":{"pathPrefix":""}}}')}}]);
//# sourceMappingURL=component---src-pages-automation-install-ban-index-mdx-284122da453d9038e2e8.js.map