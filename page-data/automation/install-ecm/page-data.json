{"componentChunkName":"component---src-pages-automation-install-ecm-index-mdx","path":"/automation/install-ecm/","result":{"pageContext":{"frontmatter":{"title":"Install IBM FileNet Content Manager","weight":900},"relativePagePath":"/automation/install-ecm/index.mdx","titleType":"page","MdxNode":{"id":"81879535-9097-5718-b64e-e0be5d85284b","children":[],"parent":"7c67e3c0-7a43-58f2-8190-63922a74faac","internal":{"content":"---\ntitle: Install IBM FileNet Content Manager\nweight: 900\n---\n- \n# make sure there is a space after the - so that the TOC is generated\n{:toc}\n\n**(19.0.3 UPDATE NEEDED)**\n\n### Required services\nBefore installing the IBM FileNet Content Manager (ECM), you should have the following pre-requisites in place:\n\n- Have privileged access to your DB2 database server. \n- Optionally, have access to your LDAP directory server.\n\nSee the [Shared services](/content/automation/shared-services) chapter for details on DB2 or LDAP installation, if needed.\n\n### Download the ECM PPA \nDownload the following PPA from [IBM Passport Advantage](https://www.ibm.com/software/passportadvantage) to your working-directory:\n\n-  *IBM Cloud Pak for Automation v19.0.1 - Content Manager for Certified Kubernetes Multiplatform Multilingual (CC220ML)* \n\nThe downloaded archive should be named `ICP4A19.0.1-ecm.tgz`.\n\n### Log in to you OCP cluster\nSee the [Prerequisites](/content/automation/pre-requisites) chapter for details on logging in to your OCP cluster.\n\n### Create the ECM project\nCreate a new OpenShift project for ECM with your desired name, e.g. `ecmproject`:\n```\noc new-project ecmproject\n```\nMake sure you are working from your newly created ECM project, then grant the tiller server `edit` access to current project:\n```\noc project ecmproject\noc adm policy add-role-to-user edit \"system:serviceaccount:tiller:tiller\"\n```\n\n### Update the Security Context Constraint (SCC)\n - Add privileged access to default service account.  \n - The ecm Helm chart uses supplemental groups. You must modify the ecmproject namespace file to include that range of supplemental groups.  \n\n```\noc adm policy add-scc-to-user privileged -z default\n\noc edit namespace ecmproject\n```\nWhile in the editor change this line:   \n - openshift.io/sa.scc.supplemental-groups: 1000250000/10000  \n  \nto the value 500/50000 so it looks like this:  \n - openshift.io/sa.scc.supplemental-groups: 500/50000  \n  \nIf the SCC is not applied properly you may get the following error later on:\n```\nforbidden: unable to validate against any security context constraint: [fsGroup: Invalid value: []int64{50000}: 50000 is not an allowed group\n```\n\n### Push the ECM images to the registry\nLogin to the Docker registry using your correct docker registry url. Example below. If you are running on-premise (i.e. not OpenShift as Managed Service on IBM Cloud) then you may need to precede the docker command with `sudo`. If you are running on OpenShift as Managed Service on IBM Cloud you will need to turn on port forwarding as described in [Shared services](./shared-services.md) chapter. \n\n```\ndocker login -u $(oc whoami) -p $(oc whoami -t) docker-registry.default.svc:5000\n```\n\nDownload the `loadimages.sh` script to your working directory:\n\n```\nwget https://raw.githubusercontent.com/icp4a/cert-kubernetes/19.0.1/scripts/loadimages.sh\nchmod +x loadimages.sh\n```\n\nLoad the ecm product binary images:\n\n```\n./loadimages.sh -p ICP4A19.0.1-ecm.tgz -r docker-registry.default.svc:5000/ecmproject\n```\n\n### Create the databases\n\nDownload these files to your working directory on the database server:\n- [`GCDDB.sh`](/assets/automation/cpe/db2/GCDDB.sh) \n- [`OS1DB.sh`](/assets/automation/cpe/db2/OS1DB.sh) \n\nRun the following commands:\n\n```\n## copy the db2 install script\nmkdir -p /data/db2fs\nmkdir -p /data/database/config\n\n## copy the GCDDB.sh and OS1DB.sh into folder /data/database/config\ncp GCDDB.sh /data/database/config\ncp OS1DB.sh /data/database/config\n\nexport CUR_COMMIT=ON\nsu - db2inst1 -c \"db2set DB2_WORKLOAD=FILENET_CM\"\necho \"set CUR_COMMIT=$CUR_COMMIT\"\n\nchown db2inst1:db2iadm1 /data/database/config/*.sh\nchmod 755 /data/database/config/*.sh\nchown -R db2inst1:db2iadm1 /data/db2fs\n\n## If you change the database names as the last entry on these lines you will also need to change them in GCD.xml and OBJSTORE.xml later on\nsu - db2inst1 -c \"/data/database/config/GCDDB.sh GCDDB\"\nsu - db2inst1 -c \"/data/database/config/OS1DB.sh OS1DB\"\n```\n\n### Set up the persistent volumes\nRun the following commands to create the required PV folders in NFS, where `/data/persistentvolumes/` is the mounted directory of your NFS server:\n\n```\nmkdir -p /data/persistentvolumes/cpe/configDropins/overrides\nmkdir -p /data/persistentvolumes/cpe/logs\nmkdir -p /data/persistentvolumes/cpe/cpefnlogstore\nmkdir -p /data/persistentvolumes/cpe/bootstrap\nmkdir -p /data/persistentvolumes/cpe/textext\nmkdir -p /data/persistentvolumes/cpe/icmrules\nmkdir -p /data/persistentvolumes/cpe/asa\n\nchown 50001:50000 /data/persistentvolumes/cpe/configDropins\nchown 50001:50000 /data/persistentvolumes/cpe/configDropins/overrides\nchown 50001:50000 /data/persistentvolumes/cpe/logs\nchown 50001:50000 /data/persistentvolumes/cpe/cpefnlogstore\nchown 50001:50000 /data/persistentvolumes/cpe/bootstrap\nchown 50001:50000 /data/persistentvolumes/cpe/textext\nchown 50001:50000 /data/persistentvolumes/cpe/icmrules\nchown 50001:50000 /data/persistentvolumes/cpe/asa\n\nmkdir -p /data/persistentvolumes/css/CSS_Server/data\nmkdir -p /data/persistentvolumes/css/CSS_Server/temp\nmkdir -p /data/persistentvolumes/css/CSS_Server/log\nmkdir -p /data/persistentvolumes/css/CSS_Server/config\nmkdir -p /data/persistentvolumes/css/indexareas\n\nchown 50001:50000 /data/persistentvolumes/css/CSS_Server/data\nchown 50001:50000 /data/persistentvolumes/css/CSS_Server/temp\nchown 50001:50000 /data/persistentvolumes/css/CSS_Server/log\nchown 50001:50000 /data/persistentvolumes/css/CSS_Server/config\nchown 50001:50000 /data/persistentvolumes/css/indexareas\n\nmkdir -p /data/persistentvolumes/cmis/configDropins/overrides\nmkdir -p /data/persistentvolumes/cmis/logs\n\nchown 50001:50000 /data/persistentvolumes/cmis/configDropins/overrides\nchown 50001:50000 /data/persistentvolumes/cmis/logs\n```\n\nObtain the DB2 drivers from your database server installation. Copy them to the PVs. If your database server is local the commands should look like this: \n\n```\ncp /opt/ibm/db2/V11.1/java/db2jcc4.jar /data/persistentvolumes/cpe/configDropins/overrides/\ncp /opt/ibm/db2/V11.1/java/db2jcc_license_cu.jar /data/persistentvolumes/cpe/configDropins/overrides/\n```\n\nDownload all the cpe overrides files to your working directory \n - [`GCD.xml`](/assets/automation/cpe/configDropins/overrides/GCD.xml) \n - [`OBJSTORE.xml`](/assets/automation/cpe/configDropins/overrides/OBJSTORE.xml) \n - [`DB2JCCDriver.xml`](/assets/automation/cpe/configDropins/overrides/DB2JCCDriver.xml) \n - [`ldap_TDS.xml`](/assets/automation/cpe/configDropins/overrides/ldap_TDS.xml)  \n\n\nIf you changed the database names in the database creation step above, you will also need to change them in GCD.xml and OBJSTORE.xml here  \n\nEdit GCD.xml, replacing `<ip-address>` with the ip-address of the database server, and possibly the database name.  \nEdit OBJSTORE.xml, replacing `<ip-address>` with the ip-address of the database server, and possibly the database name.\nDB2JCCDriver.xml contains the locations of the db2jcc4.jar and db2jcc_license_cu.jar files.  \nEdit ldap_TDS.xml, replacing `<ip-address>` with the ip-address of the LDAP server.  \n\nThen then run the following commands:\n\n```\ncp DB2JCCDriver.xml /data/persistentvolumes/cpe/configDropins/overrides/\ncp GCD.xml /data/persistentvolumes/cpe/configDropins/overrides/\ncp ldap_TDS.xml /data/persistentvolumes/cpe/configDropins/overrides/\ncp OBJSTORE.xml /data/persistentvolumes/cpe/configDropins/overrides/\n```\nDownload the cmis overrides files to your working directory. You may get a warning because the same filename is used by cpe.  \n\n - [`ldap_TDS.xml`](/assets/automation/cmis/configDropins/overrides/ldap_TDS.xml)    \n \nEdit ldap_TDS.xml, replacing `<ip-address>` with the ip-address of the LDAP server  \nThen then run the following command:\n```\ncp ldap_TDS.xml /data/persistentvolumes/cmis/configDropins/overrides/\n```\n\nDownload the [`cssSelfsignedServerStore`](/assets/automation/css/cssSelfsignedServerStore) file to your working directory then run the following command:\n\n```\ncp cssSelfsignedServerStore /data/persistentvolumes/css/CSS_Server/data\n```\n\nDownload the PV configuration files to your working directory.\n - [`cpe-pv.yaml`](/assets/automation/cpe/cpe-pv.yaml)\n - [`css-pv.yaml`](/assets/automation/css/css-pv.yaml)\n - [`cmis-pv.yaml`](/assets/automation/cmis/cmis-pv.yaml) \n\nEdit each file. Replace the placeholder `<ip-address>` placeholder with the IP address of NFS server and adjust the persistent volume path if needed.\n\nRun the following commands to create the PVs:\n\n```\noc apply -f cpe-pv.yaml\noc apply -f css-pv.yaml\noc apply -f cmis-pv.yaml\n```\n\n### Create secrets\nThe Helm charts requires a secret in order to pull images from docker You might need to change the address of the docker server.\n```\noc create secret docker-registry admin.registrykey --docker-server=docker-registry.default.svc:5000 --docker-username=$(oc whoami) --docker-password=$(oc whoami -t) -n ecmproject\n```\n\nNote that you cannot add the same secret more than once. If you need to delete a secret in order to create a new one, use the following command:  \n```\noc delete secret admin.registrykey -n ecmproject\n```\n\n### Install the ECM components\nDownload these files to your working directory.\n - [`cpe-values.yaml`](/assets/automation/cpe/cpe-values.yaml)\n - [`css-values.yaml`](/assets/automation/css/css-values.yaml)\n - [`cmis-values.yaml`](/assets/automation/cmis/cmis-values.yaml) \n\nDownload the Helm charts to your working directory:\n\n```\nwget https://github.com/icp4a/cert-kubernetes/raw/master/CONTENT/helm-charts/ibm-dba-contentservices-3.0.0.tgz\nwget https://github.com/icp4a/cert-kubernetes/raw/master/CONTENT/helm-charts/ibm-dba-contentsearch-3.0.0.tgz\nwget https://github.com/icp4a/cert-kubernetes/raw/master/CONTENT/helm-charts/ibm-dba-cscmis-1.7.0.tgz\n```\nInstall the Helm charts of CPE and Content Search:\n```\nhelm install ibm-dba-contentservices-3.0.0.tgz --name cpe-prod-release --namespace ecmproject -f cpe-values.yaml\nhelm install ibm-dba-contentsearch-3.0.0.tgz --name css-prod-release --namespace ecmproject -f css-values.yaml\n```\n\n - Expose the ACCE console service\n\nDownload the [`cpe-route.yaml`](/assets/automation/cpe/cpe-route.yaml) file to your working directory and run the following command:\n```\noc apply -f cpe-route.yaml\n```\nFind the URL of CPE web service using the command:\n```\noc get routes\n```\n\nThe URL should be something like: `http://cpe-prod-release-ibm-dba-contentservices-http-ecmproject.router.default.svc.cluster.local/wsi/FNCEWS40MTOM`\n\nEdit the file cmis-values.yaml and change the attribute `cpeURL` then install the Helm chart of CMIS:\n```\nhelm install ibm-dba-cscmis-1.7.0.tgz --name cmis-prod-release --namespace ecmproject -f cmis-values.yaml\n```\n\n\n### Open ACCE console in a browser\n\nTo retrieve the ACCE console service URL, first find the URL of the OCP cluster console:  \n\n```\noc get route -n openshift-console\n\n```\n\nwhich will return something like this:\n\n```\nNAME      HOST/PORT                                   PATH      SERVICES   PORT      TERMINATION          WILDCARD\nconsole   console.apps-cp4a-res.rtp.raleigh.ibm.com             console    https     reencrypt/Redirect   None\n```\n\nOpen the Host/Port in a browser. Select the ecmproject. On the left, select Networking, and the routes. This will give you the base URL for ACCE. Append /acce to that url. That should take you to the ACCE page.\n\nThe user name is `ceadmin` and the password is `Passw0rd`.\n\n### Post-install tasks\n\nThere is a set of steps you need to execute to complete the installation of CPE.\n\n - [Create the FileNet P8 domain](https://www.ibm.com/support/knowledgecenter/SSNW2F_5.5.0/com.ibm.p8.install.doc/p8pin328.htm)\n - [Create the database connection](https://www.ibm.com/support/knowledgecenter/SSNW2F_5.5.0/com.ibm.p8.install.doc/p8pin327.htm)\n - [Create an initial object store] (https://www.ibm.com/support/knowledgecenter/SSNW2F_5.5.0/com.ibm.p8.install.doc/p8pin034.htm)\n - [Install the necessary add-ons to the object store](https://www.ibm.com/support/knowledgecenter/en/SSNW2F_5.5.0/com.ibm.p8.ce.admin.tasks.doc/featureaddons/fa_install_addon.htm): This step can be done in the previous step while creating the object store. The following add-ons can be activated:\n ![Add-ons](/assets/automation/images/ObjectStoreAddOns.jpg)\n\n - [Configure CPE for Content Search Service](https://www.ibm.com/support/knowledgecenter/en/SSYHZ8_19.0.x/com.ibm.dba.install/k8s_topics/tsk_configcpe_css.html)\n \nHere is the complete documentation for post-installation tasks:\n\n- [Completing post-deployment tasks for IBM FileNet Content Manager](https://www.ibm.com/support/knowledgecenter/en/SSYHZ8_19.0.x/com.ibm.dba.install/k8s_topics/tsk_deploy_postecmdeployk8s.html)\n- [Installation and Upgrade Worksheet](https://www.ibm.com/support/knowledgecenter/SSGLW6_5.5.0/com.ibm.p8toc.doc/p8_worksheet.xls)\n\n### Uninstall\nIf needed, run the following steps to uninstall ECM:\n\n```\nhelm delete cpe-prod-release --purge\nhelm delete css-prod-release --purge\nhelm delete cmis-prod-release --purge\n\n# delete the cpe route\noc delete -f cpe-route.yaml\n```\n\nTo delete the persisted data of the release, you can delete the PVCs using the following commands:\n\n```\noc delete pvc cmis-cfgstore-pvc\noc delete pvc cmis-logstore-pvc\noc delete pvc cpe-bootstrap-pvc\noc delete pvc cpe-cfgstore-pvc\noc delete pvc cpe-filestore-pvc\noc delete pvc cpe-fnlogstore-pvc\noc delete pvc cpe-icmrules-pvc\noc delete pvc cpe-logstore-pvc\noc delete pvc cpe-textext-pvc\noc delete pvc cs-customstore-pvc\noc delete pvc css-cfgstore-pvc\noc delete pvc css-indexstore-pvc\noc delete pvc css-logstore-pvc\noc delete pvc css-tempstore-pvc\n\noc delete -f cpe-pv.yaml\noc delete -f css-pv.yaml\noc delete -f cmis-pv.yaml  \n```\n\nYou can delete the Docker secret\n```\noc delete secret admin.registrykey -n ecmproject\n```\n\nAsk your database administrator to delete the db2 instances.\n\n\n### Troubleshooting\n\nCheck the pods for the ecmproject. This will show the overall health.\n\n```\noc get pods -n ecmproject\n```\n\nCommon problems:\n - The registry might have run out of space. \n - Check that you're pulling from the docker registry that you uploaded to.\n - Review the security secret. \n - Docker might be configured incorrectly.  \n \n\nMake sure all five images were uploaded correctly. Check for errors in the `./loadimages.sh` step earlier.   \n\n```\noc get imagestreams -n ecmproject\n```\n\nUse the oc describe pod to get a better idea of what failed:   \n\n```\noc describe pod <pod name> -n ecmproject\n```\n\nRun oc logs to view the pod's log files\n\n```\noc logs <pod name> -n ecmproject\n\n```\n\n\n\n\n\n","type":"Mdx","contentDigest":"43c8282432e504b25ef2c6635c26403d","counter":232,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Install IBM FileNet Content Manager","weight":900},"exports":{},"rawBody":"---\ntitle: Install IBM FileNet Content Manager\nweight: 900\n---\n- \n# make sure there is a space after the - so that the TOC is generated\n{:toc}\n\n**(19.0.3 UPDATE NEEDED)**\n\n### Required services\nBefore installing the IBM FileNet Content Manager (ECM), you should have the following pre-requisites in place:\n\n- Have privileged access to your DB2 database server. \n- Optionally, have access to your LDAP directory server.\n\nSee the [Shared services](/content/automation/shared-services) chapter for details on DB2 or LDAP installation, if needed.\n\n### Download the ECM PPA \nDownload the following PPA from [IBM Passport Advantage](https://www.ibm.com/software/passportadvantage) to your working-directory:\n\n-  *IBM Cloud Pak for Automation v19.0.1 - Content Manager for Certified Kubernetes Multiplatform Multilingual (CC220ML)* \n\nThe downloaded archive should be named `ICP4A19.0.1-ecm.tgz`.\n\n### Log in to you OCP cluster\nSee the [Prerequisites](/content/automation/pre-requisites) chapter for details on logging in to your OCP cluster.\n\n### Create the ECM project\nCreate a new OpenShift project for ECM with your desired name, e.g. `ecmproject`:\n```\noc new-project ecmproject\n```\nMake sure you are working from your newly created ECM project, then grant the tiller server `edit` access to current project:\n```\noc project ecmproject\noc adm policy add-role-to-user edit \"system:serviceaccount:tiller:tiller\"\n```\n\n### Update the Security Context Constraint (SCC)\n - Add privileged access to default service account.  \n - The ecm Helm chart uses supplemental groups. You must modify the ecmproject namespace file to include that range of supplemental groups.  \n\n```\noc adm policy add-scc-to-user privileged -z default\n\noc edit namespace ecmproject\n```\nWhile in the editor change this line:   \n - openshift.io/sa.scc.supplemental-groups: 1000250000/10000  \n  \nto the value 500/50000 so it looks like this:  \n - openshift.io/sa.scc.supplemental-groups: 500/50000  \n  \nIf the SCC is not applied properly you may get the following error later on:\n```\nforbidden: unable to validate against any security context constraint: [fsGroup: Invalid value: []int64{50000}: 50000 is not an allowed group\n```\n\n### Push the ECM images to the registry\nLogin to the Docker registry using your correct docker registry url. Example below. If you are running on-premise (i.e. not OpenShift as Managed Service on IBM Cloud) then you may need to precede the docker command with `sudo`. If you are running on OpenShift as Managed Service on IBM Cloud you will need to turn on port forwarding as described in [Shared services](./shared-services.md) chapter. \n\n```\ndocker login -u $(oc whoami) -p $(oc whoami -t) docker-registry.default.svc:5000\n```\n\nDownload the `loadimages.sh` script to your working directory:\n\n```\nwget https://raw.githubusercontent.com/icp4a/cert-kubernetes/19.0.1/scripts/loadimages.sh\nchmod +x loadimages.sh\n```\n\nLoad the ecm product binary images:\n\n```\n./loadimages.sh -p ICP4A19.0.1-ecm.tgz -r docker-registry.default.svc:5000/ecmproject\n```\n\n### Create the databases\n\nDownload these files to your working directory on the database server:\n- [`GCDDB.sh`](/assets/automation/cpe/db2/GCDDB.sh) \n- [`OS1DB.sh`](/assets/automation/cpe/db2/OS1DB.sh) \n\nRun the following commands:\n\n```\n## copy the db2 install script\nmkdir -p /data/db2fs\nmkdir -p /data/database/config\n\n## copy the GCDDB.sh and OS1DB.sh into folder /data/database/config\ncp GCDDB.sh /data/database/config\ncp OS1DB.sh /data/database/config\n\nexport CUR_COMMIT=ON\nsu - db2inst1 -c \"db2set DB2_WORKLOAD=FILENET_CM\"\necho \"set CUR_COMMIT=$CUR_COMMIT\"\n\nchown db2inst1:db2iadm1 /data/database/config/*.sh\nchmod 755 /data/database/config/*.sh\nchown -R db2inst1:db2iadm1 /data/db2fs\n\n## If you change the database names as the last entry on these lines you will also need to change them in GCD.xml and OBJSTORE.xml later on\nsu - db2inst1 -c \"/data/database/config/GCDDB.sh GCDDB\"\nsu - db2inst1 -c \"/data/database/config/OS1DB.sh OS1DB\"\n```\n\n### Set up the persistent volumes\nRun the following commands to create the required PV folders in NFS, where `/data/persistentvolumes/` is the mounted directory of your NFS server:\n\n```\nmkdir -p /data/persistentvolumes/cpe/configDropins/overrides\nmkdir -p /data/persistentvolumes/cpe/logs\nmkdir -p /data/persistentvolumes/cpe/cpefnlogstore\nmkdir -p /data/persistentvolumes/cpe/bootstrap\nmkdir -p /data/persistentvolumes/cpe/textext\nmkdir -p /data/persistentvolumes/cpe/icmrules\nmkdir -p /data/persistentvolumes/cpe/asa\n\nchown 50001:50000 /data/persistentvolumes/cpe/configDropins\nchown 50001:50000 /data/persistentvolumes/cpe/configDropins/overrides\nchown 50001:50000 /data/persistentvolumes/cpe/logs\nchown 50001:50000 /data/persistentvolumes/cpe/cpefnlogstore\nchown 50001:50000 /data/persistentvolumes/cpe/bootstrap\nchown 50001:50000 /data/persistentvolumes/cpe/textext\nchown 50001:50000 /data/persistentvolumes/cpe/icmrules\nchown 50001:50000 /data/persistentvolumes/cpe/asa\n\nmkdir -p /data/persistentvolumes/css/CSS_Server/data\nmkdir -p /data/persistentvolumes/css/CSS_Server/temp\nmkdir -p /data/persistentvolumes/css/CSS_Server/log\nmkdir -p /data/persistentvolumes/css/CSS_Server/config\nmkdir -p /data/persistentvolumes/css/indexareas\n\nchown 50001:50000 /data/persistentvolumes/css/CSS_Server/data\nchown 50001:50000 /data/persistentvolumes/css/CSS_Server/temp\nchown 50001:50000 /data/persistentvolumes/css/CSS_Server/log\nchown 50001:50000 /data/persistentvolumes/css/CSS_Server/config\nchown 50001:50000 /data/persistentvolumes/css/indexareas\n\nmkdir -p /data/persistentvolumes/cmis/configDropins/overrides\nmkdir -p /data/persistentvolumes/cmis/logs\n\nchown 50001:50000 /data/persistentvolumes/cmis/configDropins/overrides\nchown 50001:50000 /data/persistentvolumes/cmis/logs\n```\n\nObtain the DB2 drivers from your database server installation. Copy them to the PVs. If your database server is local the commands should look like this: \n\n```\ncp /opt/ibm/db2/V11.1/java/db2jcc4.jar /data/persistentvolumes/cpe/configDropins/overrides/\ncp /opt/ibm/db2/V11.1/java/db2jcc_license_cu.jar /data/persistentvolumes/cpe/configDropins/overrides/\n```\n\nDownload all the cpe overrides files to your working directory \n - [`GCD.xml`](/assets/automation/cpe/configDropins/overrides/GCD.xml) \n - [`OBJSTORE.xml`](/assets/automation/cpe/configDropins/overrides/OBJSTORE.xml) \n - [`DB2JCCDriver.xml`](/assets/automation/cpe/configDropins/overrides/DB2JCCDriver.xml) \n - [`ldap_TDS.xml`](/assets/automation/cpe/configDropins/overrides/ldap_TDS.xml)  \n\n\nIf you changed the database names in the database creation step above, you will also need to change them in GCD.xml and OBJSTORE.xml here  \n\nEdit GCD.xml, replacing `<ip-address>` with the ip-address of the database server, and possibly the database name.  \nEdit OBJSTORE.xml, replacing `<ip-address>` with the ip-address of the database server, and possibly the database name.\nDB2JCCDriver.xml contains the locations of the db2jcc4.jar and db2jcc_license_cu.jar files.  \nEdit ldap_TDS.xml, replacing `<ip-address>` with the ip-address of the LDAP server.  \n\nThen then run the following commands:\n\n```\ncp DB2JCCDriver.xml /data/persistentvolumes/cpe/configDropins/overrides/\ncp GCD.xml /data/persistentvolumes/cpe/configDropins/overrides/\ncp ldap_TDS.xml /data/persistentvolumes/cpe/configDropins/overrides/\ncp OBJSTORE.xml /data/persistentvolumes/cpe/configDropins/overrides/\n```\nDownload the cmis overrides files to your working directory. You may get a warning because the same filename is used by cpe.  \n\n - [`ldap_TDS.xml`](/assets/automation/cmis/configDropins/overrides/ldap_TDS.xml)    \n \nEdit ldap_TDS.xml, replacing `<ip-address>` with the ip-address of the LDAP server  \nThen then run the following command:\n```\ncp ldap_TDS.xml /data/persistentvolumes/cmis/configDropins/overrides/\n```\n\nDownload the [`cssSelfsignedServerStore`](/assets/automation/css/cssSelfsignedServerStore) file to your working directory then run the following command:\n\n```\ncp cssSelfsignedServerStore /data/persistentvolumes/css/CSS_Server/data\n```\n\nDownload the PV configuration files to your working directory.\n - [`cpe-pv.yaml`](/assets/automation/cpe/cpe-pv.yaml)\n - [`css-pv.yaml`](/assets/automation/css/css-pv.yaml)\n - [`cmis-pv.yaml`](/assets/automation/cmis/cmis-pv.yaml) \n\nEdit each file. Replace the placeholder `<ip-address>` placeholder with the IP address of NFS server and adjust the persistent volume path if needed.\n\nRun the following commands to create the PVs:\n\n```\noc apply -f cpe-pv.yaml\noc apply -f css-pv.yaml\noc apply -f cmis-pv.yaml\n```\n\n### Create secrets\nThe Helm charts requires a secret in order to pull images from docker You might need to change the address of the docker server.\n```\noc create secret docker-registry admin.registrykey --docker-server=docker-registry.default.svc:5000 --docker-username=$(oc whoami) --docker-password=$(oc whoami -t) -n ecmproject\n```\n\nNote that you cannot add the same secret more than once. If you need to delete a secret in order to create a new one, use the following command:  \n```\noc delete secret admin.registrykey -n ecmproject\n```\n\n### Install the ECM components\nDownload these files to your working directory.\n - [`cpe-values.yaml`](/assets/automation/cpe/cpe-values.yaml)\n - [`css-values.yaml`](/assets/automation/css/css-values.yaml)\n - [`cmis-values.yaml`](/assets/automation/cmis/cmis-values.yaml) \n\nDownload the Helm charts to your working directory:\n\n```\nwget https://github.com/icp4a/cert-kubernetes/raw/master/CONTENT/helm-charts/ibm-dba-contentservices-3.0.0.tgz\nwget https://github.com/icp4a/cert-kubernetes/raw/master/CONTENT/helm-charts/ibm-dba-contentsearch-3.0.0.tgz\nwget https://github.com/icp4a/cert-kubernetes/raw/master/CONTENT/helm-charts/ibm-dba-cscmis-1.7.0.tgz\n```\nInstall the Helm charts of CPE and Content Search:\n```\nhelm install ibm-dba-contentservices-3.0.0.tgz --name cpe-prod-release --namespace ecmproject -f cpe-values.yaml\nhelm install ibm-dba-contentsearch-3.0.0.tgz --name css-prod-release --namespace ecmproject -f css-values.yaml\n```\n\n - Expose the ACCE console service\n\nDownload the [`cpe-route.yaml`](/assets/automation/cpe/cpe-route.yaml) file to your working directory and run the following command:\n```\noc apply -f cpe-route.yaml\n```\nFind the URL of CPE web service using the command:\n```\noc get routes\n```\n\nThe URL should be something like: `http://cpe-prod-release-ibm-dba-contentservices-http-ecmproject.router.default.svc.cluster.local/wsi/FNCEWS40MTOM`\n\nEdit the file cmis-values.yaml and change the attribute `cpeURL` then install the Helm chart of CMIS:\n```\nhelm install ibm-dba-cscmis-1.7.0.tgz --name cmis-prod-release --namespace ecmproject -f cmis-values.yaml\n```\n\n\n### Open ACCE console in a browser\n\nTo retrieve the ACCE console service URL, first find the URL of the OCP cluster console:  \n\n```\noc get route -n openshift-console\n\n```\n\nwhich will return something like this:\n\n```\nNAME      HOST/PORT                                   PATH      SERVICES   PORT      TERMINATION          WILDCARD\nconsole   console.apps-cp4a-res.rtp.raleigh.ibm.com             console    https     reencrypt/Redirect   None\n```\n\nOpen the Host/Port in a browser. Select the ecmproject. On the left, select Networking, and the routes. This will give you the base URL for ACCE. Append /acce to that url. That should take you to the ACCE page.\n\nThe user name is `ceadmin` and the password is `Passw0rd`.\n\n### Post-install tasks\n\nThere is a set of steps you need to execute to complete the installation of CPE.\n\n - [Create the FileNet P8 domain](https://www.ibm.com/support/knowledgecenter/SSNW2F_5.5.0/com.ibm.p8.install.doc/p8pin328.htm)\n - [Create the database connection](https://www.ibm.com/support/knowledgecenter/SSNW2F_5.5.0/com.ibm.p8.install.doc/p8pin327.htm)\n - [Create an initial object store] (https://www.ibm.com/support/knowledgecenter/SSNW2F_5.5.0/com.ibm.p8.install.doc/p8pin034.htm)\n - [Install the necessary add-ons to the object store](https://www.ibm.com/support/knowledgecenter/en/SSNW2F_5.5.0/com.ibm.p8.ce.admin.tasks.doc/featureaddons/fa_install_addon.htm): This step can be done in the previous step while creating the object store. The following add-ons can be activated:\n ![Add-ons](/assets/automation/images/ObjectStoreAddOns.jpg)\n\n - [Configure CPE for Content Search Service](https://www.ibm.com/support/knowledgecenter/en/SSYHZ8_19.0.x/com.ibm.dba.install/k8s_topics/tsk_configcpe_css.html)\n \nHere is the complete documentation for post-installation tasks:\n\n- [Completing post-deployment tasks for IBM FileNet Content Manager](https://www.ibm.com/support/knowledgecenter/en/SSYHZ8_19.0.x/com.ibm.dba.install/k8s_topics/tsk_deploy_postecmdeployk8s.html)\n- [Installation and Upgrade Worksheet](https://www.ibm.com/support/knowledgecenter/SSGLW6_5.5.0/com.ibm.p8toc.doc/p8_worksheet.xls)\n\n### Uninstall\nIf needed, run the following steps to uninstall ECM:\n\n```\nhelm delete cpe-prod-release --purge\nhelm delete css-prod-release --purge\nhelm delete cmis-prod-release --purge\n\n# delete the cpe route\noc delete -f cpe-route.yaml\n```\n\nTo delete the persisted data of the release, you can delete the PVCs using the following commands:\n\n```\noc delete pvc cmis-cfgstore-pvc\noc delete pvc cmis-logstore-pvc\noc delete pvc cpe-bootstrap-pvc\noc delete pvc cpe-cfgstore-pvc\noc delete pvc cpe-filestore-pvc\noc delete pvc cpe-fnlogstore-pvc\noc delete pvc cpe-icmrules-pvc\noc delete pvc cpe-logstore-pvc\noc delete pvc cpe-textext-pvc\noc delete pvc cs-customstore-pvc\noc delete pvc css-cfgstore-pvc\noc delete pvc css-indexstore-pvc\noc delete pvc css-logstore-pvc\noc delete pvc css-tempstore-pvc\n\noc delete -f cpe-pv.yaml\noc delete -f css-pv.yaml\noc delete -f cmis-pv.yaml  \n```\n\nYou can delete the Docker secret\n```\noc delete secret admin.registrykey -n ecmproject\n```\n\nAsk your database administrator to delete the db2 instances.\n\n\n### Troubleshooting\n\nCheck the pods for the ecmproject. This will show the overall health.\n\n```\noc get pods -n ecmproject\n```\n\nCommon problems:\n - The registry might have run out of space. \n - Check that you're pulling from the docker registry that you uploaded to.\n - Review the security secret. \n - Docker might be configured incorrectly.  \n \n\nMake sure all five images were uploaded correctly. Check for errors in the `./loadimages.sh` step earlier.   \n\n```\noc get imagestreams -n ecmproject\n```\n\nUse the oc describe pod to get a better idea of what failed:   \n\n```\noc describe pod <pod name> -n ecmproject\n```\n\nRun oc logs to view the pod's log files\n\n```\noc logs <pod name> -n ecmproject\n\n```\n\n\n\n\n\n","fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/cloudpak8s/src/pages/automation/install-ecm/index.mdx"}}}}