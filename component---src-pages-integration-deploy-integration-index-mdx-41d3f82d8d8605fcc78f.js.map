{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/integration/deploy-integration/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"iPAEeA,ECGI,SAAC,GAAD,MAAGC,EAAH,EAAGA,MAAH,IAAUC,YAAV,MAAiB,GAAjB,SACjB,mBAAKC,UAAWC,IAAGC,cAAD,OAAgBC,YAAWJ,EAAKK,OAAhC,KAChB,mBAAKJ,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,iBACb,kBAAIK,GAAG,aAAaL,UAAWM,QAC5BR,Q,wBCTES,ECIE,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,iBAA8BC,EAAqB,EAAjCC,WAGhBA,EAHiD,OAEnEC,KACEC,aAAgBF,WAHiD,EAmB3BD,GAAkBC,EAApDG,EAnB6D,EAmB7DA,QAASC,EAnBoD,EAmBpDA,aAEXC,EAAUF,EAAN,SArB2D,EAmBtCG,OAEUF,EAA/B,aAAwDN,EAElE,OAAOK,EACL,mBAAKb,UAAS,WAAaiB,OACzB,mBAAKjB,UAAU,WACb,iBAAGA,UAAWkB,OAAMH,KAAMA,GAA1B,8BAKF,M,oDCnCSI,E,gLCkBbC,OAAA,WAAU,IAAD,EACgBC,KAAKC,MAApBvB,EADD,EACCA,KAAMwB,EADP,EACOA,KACRC,EAAaD,EAChBE,MAAM,KACNC,OAAOC,SACPC,OAAO,GAAG,GAEPC,EAAW9B,EAAK+B,KAAI,SAAAC,GAAQ,IAAD,EACzBC,EAAeC,IAAQF,EAAK,CAAEG,OAAO,IACrCC,EAAWH,IAAiBR,EAC5BY,EAAkB,IAAIC,OAAUb,EAAd,SAClBT,EAAOQ,EAAKe,QAAQF,EAAiBJ,GAC3C,OACE,kBAAIO,IAAKR,EAAK/B,UAAWC,KAAE,OAAIuC,gBAAeL,EAAnB,GAA+BM,aACxD,YAAC,OAAD,CAAMzC,UAAWkB,OAAMwB,GAAE,GAAK3B,GAC3BgB,OAMT,OACE,mBAAK/B,UAAW2C,iBACd,mBAAK3C,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,mCACb,uBACE,kBAAIA,UAAW4C,QAAOf,S,GAjCAgB,IAAMC,W,YCyD7BC,IA3DC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EACJH,EAAlDI,mBADsD,MACxC,GADwC,EACpC5C,EAAgCwC,EAAhCxC,iBAAkB6C,EAAcL,EAAdK,UACpCtD,EAA8CqD,EAA9CrD,KAAMD,EAAwCsD,EAAxCtD,MAAOwD,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,YAAaC,EAAaJ,EAAbI,SAI/BC,EANoD,OAM5D9C,KAAQ8C,WAUJlC,EAAOkC,EACTP,EAASQ,SAASpB,QAAQmB,EAAY,IACtCP,EAASQ,SAYPlC,EATCzB,EAEHwB,EACGE,MAAM,KACNC,OAAOC,SACPC,OAAO,GAAG,IAAMK,IAAQlC,EAAK,GAAI,CAAEmC,OAAO,IAL7B,GAUpB,OACE,YAACyB,EAAA,EAAD,CACE5D,KAAMA,EACN6D,UAAU,EACVN,MAAOA,EACPO,UAAW/D,EACXgE,gBAAiBP,EACjBQ,aAAcP,EACdH,UAAWA,GAEX,YAAC,EAAD,CAAYvD,MAAOqD,EAAQ,YAACA,EAAD,MAAYrD,EAAOkE,MAAM,QAAQjE,KAAMA,IACjEA,GAAQ,YAAC,EAAD,CAAUwB,KAAMA,EAAMxB,KAAMA,EAAMyB,WAAYA,IACvD,YAACyC,EAAA,EAAD,CAAMC,QAAM,GACTjB,EACD,YAAC,EAAD,CAAUzC,iBAAkBA,KAE9B,YAAC2D,EAAA,EAAD,CACEnB,YAAaA,EACbE,SAAUA,EACV3B,KAAMA,EACNxB,KAAMA,EACNyB,WAAYA,IAEd,YAAC4C,EAAA,EAAD,S,+aC5DC,IAAMC,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGpD,E,oIACF,mBACD,OAAO,YAACiD,EAAD,KAAeD,EAAiBhD,EAAhC,CAAuCoD,WAAYA,EAAYC,QAAQ,cAG5E,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kBADQ,iBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,0BADQ,yBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wBADQ,uBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2BADQ,2BAItB,sCACA,2IACA,8CACA,sBACE,kBAAIA,WAAW,MAAf,oDAAyE,mBAAGA,WAAW,MAAS,CAC5F,KAAQ,qBAD6D,iBAAzE,OAEkC,mBAAGA,WAAW,MAAS,CACrD,KAAQ,qBADsB,mBAGlC,kBAAIA,WAAW,MAAf,sCAA2D,0BAAYA,WAAW,MAAvB,OAA3D,eAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iJAGL,4CACA,sBACE,kBAAIA,WAAW,MAAf,mCAAwD,sBAAQA,WAAW,MAAnB,mBAAxD,eAA4H,sBAAQA,WAAW,MAAnB,eAA5H,cACA,kBAAIA,WAAW,MAAf,qFAA0G,sBAAQA,WAAW,MAAnB,YAA1G,gDACA,kBAAIA,WAAW,MAAf,SAA8B,sBAAQA,WAAW,MAAnB,YAA9B,oEAAgJ,mBAAGA,WAAW,MAAS,CACnK,KAAQ,0BADoI,wBAAhJ,KAGA,kBAAIA,WAAW,MAAf,SAA8B,sBAAQA,WAAW,MAAnB,cAC9B,kBAAIA,WAAW,MAAf,gDAAqE,sBAAQA,WAAW,MAAnB,QACrE,kBAAIA,WAAW,MAAf,4BAAiD,sBAAQA,WAAW,MAAnB,QACjD,kBAAIA,WAAW,MAAf,sBAA2C,sBAAQA,WAAW,MAAnB,iBAA3C,KACA,kBAAIA,WAAW,MAAf,gCACA,kBAAIA,WAAW,MAAf,kCAAuD,kBAAIA,WAAW,MAClE,kBAAIA,WAAW,MAAf,gEAEJ,kBAAIA,WAAW,MAAf,wBACA,kBAAIA,WAAW,MAAf,mIACA,kBAAIA,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAf,2GACA,kBAAIA,WAAW,MAAf,+BAAoD,0BAAYA,WAAW,MAAvB,uBAApD,qDAA0K,0BAAYA,WAAW,MAAvB,yBAA1K,uCAAoR,0BAAYA,WAAW,MAAvB,kBAApR,iDACA,kBAAIA,WAAW,MAAf,kOAAuP,0BAAYA,WAAW,MAAvB,aAAvP,OAAqT,0BAAYA,WAAW,MAAvB,cAArT,mGACA,kBAAIA,WAAW,MAAf,qGAA0H,mBAAGA,WAAW,MAAS,CAC7I,KAAQ,+FAD8G,QAA1H,kCAIF,+CACA,sBACE,kBAAIA,WAAW,MAAf,0BACJ,qBAAKA,WAAW,MAAS,CACjB,IAAO,iBACP,IAAO,WAOjBH,EAAWI,gBAAiB,G","file":"component---src-pages-integration-deploy-integration-index-mdx-41d3f82d8d8605fcc78f.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug\n        .split('/')\n        .filter(Boolean)\n        .slice(-1)[0] || slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#introduction\"\n        }}>{`Introduction`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#prepare-installation\"\n        }}>{`Prepare Installation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#begin-installation\"\n        }}>{`Begin Installation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#validate-installation\"\n        }}>{`Validate installation`}</a></li>\n    </ul>\n    <h3>{`Introduction`}</h3>\n    <p>{`This page contains guidance on how to configure the App Connect Enterprise (ACE) on the Cloud Pak for Integration.`}</p>\n    <h3>{`Prepare Installation`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Ensure you have followed all of the steps in the `}<a parentName=\"li\" {...{\n          \"href\": \"../onprem-online\"\n        }}>{`onprem-online`}</a>{` or `}<a parentName=\"li\" {...{\n          \"href\": \"../onprem-offile\"\n        }}>{`onprem-offline`}</a></li>\n      <li parentName=\"ol\">{`Ensure permissions are set in your `}<inlineCode parentName=\"li\">{`ace`}</inlineCode>{` namespace`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`oc adm policy add-scc-to-group ibm-anyuid-scc system:serviceaccounts:ace\noc adm policy add-scc-to-group anyuid system:serviceaccounts:ace\n`}</code></pre>\n    <h3>{`Begin Installation`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Go to CP4I Platform Home. Click `}<strong parentName=\"li\">{`Create instance`}</strong>{` inside the `}<strong parentName=\"li\">{`App Connect`}</strong>{` tile.    `}</li>\n      <li parentName=\"ol\">{`A window will pop up with a description of the requirements for installing. Click `}<strong parentName=\"li\">{`Continue`}</strong>{` to the helm chart deployment configuration.`}</li>\n      <li parentName=\"ol\">{`Click `}<strong parentName=\"li\">{`Overview`}</strong>{` to view the chart information and pre-reqs that were covered in `}<a parentName=\"li\" {...{\n          \"href\": \"#prepare-installation\"\n        }}>{`Prepare Installation`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Click `}<strong parentName=\"li\">{`Configure`}</strong></li>\n      <li parentName=\"ol\">{`Enter the Helm release name. In our example, `}<strong parentName=\"li\">{`ace`}</strong></li>\n      <li parentName=\"ol\">{`Enter Target Namespace - `}<strong parentName=\"li\">{`ace`}</strong></li>\n      <li parentName=\"ol\">{`Select a Cluster - `}<strong parentName=\"li\">{`local-cluster`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Check the license agreement.`}</li>\n      <li parentName=\"ol\">{`Under Parameters -> Quick start`}<ol parentName=\"li\">\n          <li parentName=\"ol\">{`Ingress - icp-proxy address defined during installation   `}</li>\n        </ol></li>\n      <li parentName=\"ol\">{`Click All Parameters`}</li>\n      <li parentName=\"ol\">{`Under Server Chart Repository - make sure it is set to the right one for your install (local registry or IBM Entitled Registry)`}</li>\n      <li parentName=\"ol\">{`Uncheck production usage`}</li>\n      <li parentName=\"ol\">{`Name of the namespace that ICP4I is installed into - this is where your Platform Navigator is installed`}</li>\n      <li parentName=\"ol\">{`Image Pull Secret -> Set to `}<inlineCode parentName=\"li\">{`ibm-entitlement-key`}</inlineCode>{` if using entitled registry or if offline use the `}<inlineCode parentName=\"li\">{`deployer-dockercfg-XX`}</inlineCode>{` secret in your ace namespace.  Use `}<inlineCode parentName=\"li\">{`oc get secrets`}</inlineCode>{` to get the exact value for your environment.`}</li>\n      <li parentName=\"ol\">{`Further down, find the section on Persistence. You can uncheck this or leave checked and refer to an existing pvc or storageclass.  Make sure you put the values in the appropriate spot.  If unsure of what is available, use `}<inlineCode parentName=\"li\">{`oc get sc`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`oc get pvc`}</inlineCode>{` respectively.  Note that App Connect requires File (not block) based storage to work properly.`}</li>\n      <li parentName=\"ol\">{`Click Install to complete.  Once the pods are up you can then deploy integration .bar files.  See `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/SSTTDS_11.0.0/com.ibm.ace.icp.doc/icp0015_.htm\"\n        }}>{`here`}</a>{` for more info on this topic.`}</li>\n    </ol>\n    <h3>{`Validate installation`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`View all pods running\n`}<img parentName=\"li\" {...{\n          \"src\": \"4.ace-pods.png\",\n          \"alt\": null\n        }}></img></li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}