{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/mcm/cp4mcm_mcm_install/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-mcm-cp-4-mcm-mcm-install-index-mdx-34e00fcb9fdaf3f0a1ad.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug\n        .split('/')\n        .filter(Boolean)\n        .slice(-1)[0] || slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ul>\n      <li parentName=\"ul\">{`{:toc}`}</li>\n    </ul>\n    <h2>{`Overview`}</h2>\n    <p>{`In this section we will walk through the installation of the MCM component of the Cloud Pak for Multicloud Management. This document is specifically written for installations on Red Hat OpenShift 4.2 running on an x86 architecture. The purpose of this document is to be agnostic. In other words… MCM requires OpenShift 4.2 to be installed we don’t care if it is on-prem or in the cloud or bare-metal or virtual machines. In the sections below we will discuss the Online vs Offline install, both of which are very similar with differences in the location of the MCM installation images.`}</p>\n    <h3>{`Prerequisites`}</h3>\n    <p>{`This document does not describe how to install or configure the underlying OpenShift platform. So prior to installing make sure you have a working OpenShift cluster with the required capacity.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Check the requirements doc to make sure you have size your cluster appropriately and you have capacity`}</li>\n      <li parentName=\"ul\">{`For offline installs make sure you have downloaded the Cloud Pak for Multicloud Management Passport Advantage Archive (PPA) file (see requirements) and copied it to the installation server`}</li>\n      <li parentName=\"ul\">{`For online installs make sure you have an entitlement key to access the IBM Entitled Docker Registry`}</li>\n      <li parentName=\"ul\">{`The installation is performed from the Command line (CLI) so you will need the required CLI tools to interface with the cluster. Instructions on setting up the required CLI tools here: `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/en/SSFC4F_1.2.0/cli/cli_guide_mcm.html\"\n        }}>{`https://www.ibm.com/support/knowledgecenter/en/SSFC4F_1.2.0/cli/cli_guide_mcm.html`}</a></li>\n      <li parentName=\"ul\">{`Offline installation will require the docker client install on the installation server`}</li>\n    </ul>\n    <h3>{`Configuring your installation`}</h3>\n    <p>{`This section will attempt to describe the options available for the MCM Installation.`}</p>\n    <p>{`Below is the config.yaml extracted from the inception image:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Licensed Materials - Property of IBM\n# IBM Cloud private\n# @ Copyright IBM Corp. 2019 All Rights Reserved\n# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.\n\n---\n\n# A list of OpenShift nodes\ncluster_nodes:\n  master:\n    - <your-openshift-dedicated-node-to-deploy-master-components>\n  proxy:\n    - <your-openshift-dedicated-node-to-deploy-proxy-components>\n  management:\n    - <your-openshift-dedicated-node-to-deploy-management-components>\n\n# Storage Class\nstorage_class: <storage class available in OpenShift>\n\n## You can set different storage class for logging.\n## By default it will use the value of storage_class.\n# elasticsearch_storage_class:\n\n## If you are installing on ROKS environment please update following settings\n## roks_enabled: set this to true\n## roks_url: Openshift public service endpoint URL\n## roks_user_prefix: User prefix used for users enabled on ROKS, Default value is 'IAM#'.\n## You can get users information from command 'oc get users'.\n## ROKS settings\nroks_enabled: false\nroks_url: <roks_url>\nroks_user_prefix: \"IAM#\"\n\n# default_admin_password:\n# password_rules:\n#   - '^([a-zA-Z0-9\\\\-]{32,})$'\n\n## You can disable following services if they are not needed\nmanagement_services:\n  # Common services\n  iam-policy-controller: enabled\n  metering: enabled\n  licensing: disabled\n  monitoring: enabled\n  nginx-ingress: enabled\n  common-web-ui: enabled\n  catalog-ui: enabled\n  mcm-kui: enabled\n  logging: disabled\n  audit-logging: disabled\n  system-healthcheck-service: disabled\n  multitenancy-enforcement: disabled\n\n  # mcm services\n  multicluster-hub: enabled\n  search: enabled\n  key-management: enabled\n  notary: disabled\n  cis-controller: disabled\n  vulnerability-advisor: disabled\n  mutation-advisor: disabled\n  sts: disabled\n  secret-encryption-policy-controller: disabled\n  image-security-enforcement: disabled\n\n\n`}</code></pre>\n    <p>{`Here we will describe each of the relevant sections in the context of this doc.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`cluster_nodes`}</strong>{` - This section describes which nodes in your cluster the MCM components are allowed to run. The MCM Foundation components are split into three sections master, proxy and management. It is recommended that the master and proxy components run on the same nodes and that the management components run on dedicated nodes. The number of nodes you specify in each section determines the number of nodes that the work can be split across and will determine the level availability you can achieve. If you specify one node in each of the sections and that node goes down you will lose your ability to use MCM. If you have capacity it is a good idea to have multiple nodes in each section.`}</li>\n    </ul>\n    <p>{`It is import to note that the master nodes in the config.yaml does not mean you should add your OpenShift Master nodes in that section. It is `}<strong parentName=\"p\">{`NOT`}</strong>{` recommended to run any of the MCM components on your OpenShift Master nodes.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`storage_class`}</strong>{` - The storage class is the dynamic storage class that the installer will use when creating persistent volumes. This storage class should be a `}<inlineCode parentName=\"p\">{`block `}</inlineCode>{` storage provider. Generally faster disk is preferred. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`default_admin_password`}</strong>{` - The default_admin_password is the password that will be assigned the default admin user to authenticate to the MCM application. It is recommended that the password be set to a password that meets your organizations password requirements. Use the stanza below as an example:`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`default_admin_password: <your password>\npassword_rules:\n- '(.*)'\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`management_services`}</strong>{` - In the management_service section you can enable or disable some the MCM Foundation components that are available. The default values are generally sufficient for an MCM install. If you require the additional service you can enable them, but note that they may require additional capacity and customization not covered in this document. Note that the MCM services are enabled at the end of this section.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Additional considerations`}</strong>{` - If you want to deploy MCM in an highly available configuration you will want to add some additional sections to increase the number of replicas and enable persistance for each of the MCM Components. See the sample stanza below:`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`multicluster-hub:\n  global:\n    replicas: 3\n  etcd:\n    haMode: true\n    persistence: true\n    storageclassName: <your storage class>\n  core:\n    apiserver:\n      etcd:\n        haMode: true\n`}</code></pre>\n    <h2>{`Offline Installation`}</h2>\n    <p><strong parentName=\"p\">{`1.`}</strong>{` Login to the OpenShift Install server.`}</p>\n    <p><strong parentName=\"p\">{`2.`}</strong>{` Authenticate to the OpenShift server where you would like to install MCM (these can be copied from the OpenShift Console UI)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc login --token=<your_token> --server=<INSERT_SERVER_URL_HERE>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`3.`}</strong>{` Navigate to the folder containing the line PPA archive package and extract and load the PPA Archive ( this may take ~10-20)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`tar xf ibm-cp4mcm-core-1.2-x86_64.tar.gz -O | sudo docker load\n`}</code></pre>\n    <p><strong parentName=\"p\">{`4.`}</strong>{` Create a working directory `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo mkdir /opt/mcm; cd /opt/mcm\n`}</code></pre>\n    <p><strong parentName=\"p\">{`5.`}</strong>{` Extract the installation configuration files. We will modify these to customize our installation.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker run --rm -v $(pwd):/data:z -e LICENSE=accept --security-opt label:disable ibmcom/mcm-inception-amd64:3.2.3 cp -r cluster /data\n`}</code></pre>\n    <p><strong parentName=\"p\">{`6.`}</strong>{` Create your kubeconfig file for the installer to use`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc config view > cluster/kubeconfig\n`}</code></pre>\n    <p><strong parentName=\"p\">{`7.`}</strong>{` Next we will need to update the `}<strong parentName=\"p\">{`cluster_node`}</strong>{` sections with our clusters. You will need to add the nodes from your cluster. Use the exact node names from the `}<inlineCode parentName=\"p\">{`oc get nodes`}</inlineCode>{` command.`}</p>\n    <p><strong parentName=\"p\">{`8.`}</strong>{` Add the storage class for your cluster in the `}<strong parentName=\"p\">{`storage_class`}</strong>{` field. The storage class must be a block storage provider. Use the exact node names from the `}<inlineCode parentName=\"p\">{`oc get sc`}</inlineCode>{` command.`}</p>\n    <p><strong parentName=\"p\">{`9.`}</strong>{` Update the `}<strong parentName=\"p\">{`default_admin_password`}</strong>{` field with a suitable password`}</p>\n    <p><strong parentName=\"p\">{`10.`}</strong>{` Define the `}<strong parentName=\"p\">{`management_services`}</strong>{`  appropriate to your install`}</p>\n    <p><strong parentName=\"p\">{`11.`}</strong>{` Start the installation (this can run for ~30-45min)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run -t --net=host -e LICENSE=accept -v $(pwd):/installer/cluster:z -v /var/run:/var/run:z -v /etc/docker:/etc/docker:z --security-opt label:disable ibmcom/mcm-inception-amd64:3.2.3 install-with-openshift\n`}</code></pre>\n    <p><strong parentName=\"p\">{`12.`}</strong>{` Connect to the MCM hub console using the `}<inlineCode parentName=\"p\">{`icp-console`}</inlineCode>{` route defined in OCP. Use the `}<inlineCode parentName=\"p\">{`oc get routes -A`}</inlineCode>{` command to get the domain. You can access the MCM Console via a browser with the icp-console domain and the credentials you specified in the config.yaml.`}</p>\n    <h2>{`Online Installation`}</h2>\n    <p>{`Use b3c.8x32.encrypted flavor nodes anything smaller and it will time out.`}</p>\n    <p><strong parentName=\"p\">{`1.`}</strong>{` Get your CP4MCM product entitlement. (Basic instructions and the script can be found here: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.ibm.com/CloudPakOpenContent/cloudpak-entitlement\"\n      }}>{`https://github.ibm.com/CloudPakOpenContent/cloudpak-entitlement`}</a>{`)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./pak-entitlement.sh show-key \"IBM Cloud Pak for Multicloud Management\"\n<your entitlement key>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`2.`}</strong>{` Login to the public docker repo using your entitlement key`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker login cp.icr.io --username ekey --password <your entitlement key>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`3.`}</strong>{` Login to your OpenShift environment by copying your login credentials from the Openshift UI.`}</p>\n    <p><strong parentName=\"p\">{`4.`}</strong>{` Create secret for the installer to use for authentication during install.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create secret docker-registry entitled-registry --docker-server=cp.icr.io --docker-username=ekey --docker-password=<your entitlement key> --docker-email=john.webb@us.ibm.com\n`}</code></pre>\n    <p><strong parentName=\"p\">{`5.`}</strong>{` Pull the mcm inception image`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker pull cp.icr.io/cp/icp-foundation/mcm-inception:3.2.3\n`}</code></pre>\n    <p><strong parentName=\"p\">{`6.`}</strong>{` Make a directory for the installation files.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`mkdir ibm-multicloud-manager-1.2 ; cd ibm-multicloud-manager-1.2\n`}</code></pre>\n    <p><strong parentName=\"p\">{`7.`}</strong>{` Extract installation files from the inception image`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker run --rm -v $(pwd):/data:z -e LICENSE=accept --security-opt label:disable cp.icr.io/cp/icp-foundation/mcm-inception:3.2.3 cp -r cluster /data\n`}</code></pre>\n    <p><strong parentName=\"p\">{`8.`}</strong>{` Create your kubeconfig file for the installer to use.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc config view > cluster/kubeconfig\n`}</code></pre>\n    <p><strong parentName=\"p\">{`9.`}</strong>{` Change to the cluster directory.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cd cluster\n`}</code></pre>\n    <p><strong parentName=\"p\">{`10.`}</strong>{` Customize config.yaml. Below is a sample used to install the CP4MCM.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# Licensed Materials - Property of IBM\n# IBM Cloud private\n# @ Copyright IBM Corp. 2019 All Rights Reserved\n# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.\n# A list of OpenShift nodes\ncluster_nodes:\n  master:\n    - 10.177.125.156\n    - 10.177.125.159\n    - 10.177.125.167\n  proxy:\n    - 10.177.125.156\n    - 10.177.125.159\n    - 10.177.125.167\n  management:\n    - 10.177.125.156\n    - 10.177.125.159\n    - 10.177.125.167\n# Storage Class\nstorage_class: ibmc-block-gold\n## You can set different storage class for logging.\n## By default it will use the value of storage_class.\n# elasticsearch_storage_class:\nimage_repo: cp.icr.io/cp/icp-foundation\nprivate_registry_enabled: true\ndocker_username: ekey\ndocker_password: <your entitlement key>\n## If you are installing on ROKS environment please update following settings\n## roks_enabled: set this to true\n## roks_url: Openshift public service endpoint URL\n## roks_user_prefix: User prefix used for users enabled on ROKS, Default value is 'IAM#'.\n## You can get users information from command 'oc get users'.\n## ROKS settings\nroks_enabled: true\nroks_url: <your ROKS public endpoint>\nroks_user_prefix: \"IAM#\"\ndefault_admin_password: XukobCa4ivZjQKjOs5gRjVIibsTkP6Re\n# password_rules:\n#   - '^([a-zA-Z0-9\\\\-]{32,})$'\n## You can disable following services if they are not needed\nmanagement_services:\n  # Common services\n  iam-policy-controller: enabled\n  metering: enabled\n  licensing: disabled\n  monitoring: enabled\n  nginx-ingress: enabled\n  common-web-ui: enabled\n  catalog-ui: enabled\n  mcm-kui: enabled\n  logging: disabled\n  audit-logging: disabled\n  system-healthcheck-service: disabled\n  multitenancy-enforcement: disabled\n  # mcm services\n  multicluster-hub: enabled\n  search: enabled\n  key-management: enabled\n  notary: disabled\n  cis-controller: disabled\n  vulnerability-advisor: disabled\n  mutation-advisor: disabled\n  sts: disabled\n  secret-encryption-policy-controller: disabled\n  image-security-enforcement: disabled\n`}</code></pre>\n    <p><strong parentName=\"p\">{`11.`}</strong>{` Start the installatation process.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker run -t --net=host -e LICENSE=accept -v $(pwd):/installer/cluster:z -v /var/run:/var/run:z -v /etc/docker:/etc/docker:z --security-opt label:disable cp.icr.io/cp/icp-foundation/mcm-inception:3.2.3 install-with-openshift\n`}</code></pre>\n    <h2>{`Uninstall`}</h2>\n    <p>{`Run the following command to uninstall the CP`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`sudo docker run -t --net=host -e LICENSE=accept -v $(pwd):/installer/cluster:z -v /var/run:/var/run:z -v /etc/docker:/etc/docker:z --security-opt label:disable cp.icr.io/cp/icp-foundation/mcm-inception:3.2.3 uninstall-openshift\n`}</code></pre>\n    <h2>{`Additional Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a href=\"https://www.ibm.com/support/knowledgecenter/en/SSFC4F_1.2.0/install/overview.html\">Knowledge Center - MCM 1.2 Installation Guide</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}